apply plugin: 'groovy'

dependencies {
	compile gradleApi()
	compile gradleTestKit()
	compile group: "biz.aQute.bnd", name: "biz.aQute.bnd", version: "3.3.0"
	compile group: "com.squareup.okhttp3", name: "okhttp", version: "3.3.1"
	compile group: "org.codehaus.groovy", name: "groovy-all", version: "2.4.4"
	compile group: "org.spockframework", name: "spock-core", version: "1.0-groovy-2.4"

	testCompile group: "biz.aQute.bnd", name: "biz.aQute.remote.api", version: "3.3.0"
	testCompile group: "com.liferay.arquillian", name: "com.liferay.arquillian.arquillian-container-liferay", version: "1.0.6"
	testCompile group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "2.20.0"
	testCompile group: "commons-io", name: "commons-io", version: "2.5"
	testCompile group: "junit", name: "junit", version: "4.12"
	testCompile group: "org.jboss.arquillian.graphene", name: "graphene-webdriver", version: "2.1.0.Final"
	testCompile group: "org.jboss.arquillian.junit", name: "arquillian-junit-container", version: "1.1.11.Final"

	testCompile project(":tests:utils")
}

repositories {
	maven {
		url "https://cdn.lfrs.sl/repository.liferay.com/nexus/content/groups/public"
	}
}

startTestableTomcat {
	checkTimeout = 10 * 60 * 1000
}

testIntegration {
	outputs.upToDateWhen { false }

	dependsOn ":initBundle", startTestableTomcat

	beforeSuite {
		def moduleOutputPaths = []

		rootProject.subprojects { p ->
			p.plugins.withType(JavaPlugin) {
				moduleOutputPaths << p.tasks["jar"].outputs.files.singleFile.absolutePath
			}
		}

		systemProperty 'moduleOutputPaths', moduleOutputPaths.join(",")
	}

	rootProject.subprojects { p ->
		p.plugins.withType(JavaPlugin) {
			dependsOn p.tasks["jar"]
		}
	}

	systemProperty 'bladeURL', System.getProperty('bladeURL', "https://releases.liferay.com/tools/blade-cli/latest/blade.jar")

	finalizedBy {
		stopTestableTomcat
	}

	doLast {
		delete new File("target/drone-phantomjs")
	}
}

stopTestableTomcat {
	doLast {
		delete new File(liferay.liferayHome, "data")
	}
}