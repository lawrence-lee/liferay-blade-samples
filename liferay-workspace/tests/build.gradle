buildscript {
	repositories {
		maven {
			url "https://cdn.lfrs.sl/repository.liferay.com/nexus/content/groups/public"
		}
	}

	dependencies {
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins.source.formatter", version: "latest.release"
		classpath group: "com.liferay", name: "com.liferay.source.formatter", version: "latest.release"
	}
}

apply plugin: 'groovy'
apply plugin: 'com.liferay.source.formatter'

dependencies {
	compile gradleApi()
	compile gradleTestKit()
	compile group: "biz.aQute.bnd", name: "biz.aQute.bnd", version: "3.1.0"
	compile group: "com.squareup.okhttp3", name: "okhttp", version: "3.3.1"
	compile group: "org.codehaus.groovy", name: "groovy-all", version: "2.4.4"
	compile group: "org.spockframework", name: "spock-core", version: "1.0-groovy-2.4"

	testCompile group: 'commons-io', name: 'commons-io', version: '2.5'
}

repositories {
	maven {
		url "https://cdn.lfrs.sl/repository.liferay.com/nexus/content/groups/public"
	}
}

test {
	dependsOn ":initBundle"

	beforeSuite {
		def moduleOutputPaths = []

		project(":modules").subprojects { p ->
			p.plugins.withType(JavaPlugin) {
				moduleOutputPaths << p.tasks["jar"].outputs.files.singleFile.absolutePath
			}
		}

		systemProperty 'moduleOutputPaths', moduleOutputPaths.join(",")
	}

	project(":modules").subprojects { p ->
		p.plugins.withType(JavaPlugin) {
			dependsOn p.tasks["build"]
		}
	}

	systemProperty 'bladeURL', System.getProperty('bladeURL', "https://releases.liferay.com/tools/blade-cli/latest/blade.jar")
}